Pretty print:

vector<vector<int> > Solution::prettyPrint(int A) {
    vector<vector<int> > ans;


    int size = 2*(A - 1) + 1;
    vector<vector<int> > array(size, vector<int>(size, A));
    if (A < 1) {
        return ans;
    }
    for (int i = 0; i <= size/2; i++) {
        int j = size/2;
        int t = A - i;
        int c = (size/2 - i);
        int count = 0;
        while (t != A) {
            while (count <= c) {
                array[i][j - count] = t;
                array[i][j + count] = t;
                array[size - i - 1][j - count] = t;
                array[size - i - 1][j + count] = t;
                count++;
            }
            t++;
            c++;
        }
    }
    return array;
}


NEXTGREATER:

class Solution:
    # @param A : list of integers
    # @return a list of integers
    def nextGreater(self, A):
        r =[]
        for i in range(0, len(A), 1):
            next = -1
            for j in range(i+1, len(A), 1):
                if A[i] < A[j]:
                    next = A[j]
                    break
            r.append(next)
        return r


Longest Consecutive Sequence:

class Solution:
    # @param A : tuple of integers
    # @return an integer
    def longestConsecutive(self, A):
        l = 0
        num_set = set(A)

        for num in num_set:
            if num - 1 not in num_set:
                cc = num
                c = 1

                while cc + 1 in num_set:
                    cc += 1
                    c += 1
                    
                l = max(l, c)
                
        return l
